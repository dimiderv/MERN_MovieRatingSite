{"ast":null,"code":"var _jsxFileName = \"/home/dejvi/Documents/Docker/MovieApp/frontend/src/AddGenres.js\",\n  _s = $RefreshSig$();\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport { Row } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Image from \"react-bootstrap/Image\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst genres = require('./data/genres.json');\nconst AddGenres = _ref => {\n  _s();\n  let {\n    movie,\n    addGoalHandler\n  } = _ref;\n  //   const { title, year, thumbnail, cast, genres } = movie;\n  const [active, setActive] = useState(false);\n  const [loadedGoals, setLoadedGoals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  async function initGenre(genres) {\n    // setIsLoading(true);\n\n    try {\n      const response = await fetch('http://localhost/genre', {\n        method: 'POST',\n        body: JSON.stringify({\n          name: genres\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const resData = await response.json();\n      // console.log(resData.movies)\n      if (!response.ok) {\n        throw new Error(resData.message || 'Adding the goal failed.');\n      }\n      // console.log(resData)\n      // setLoadedGoals(resData.movies.results.map((a)=>  \n      // a.title));\n    } catch (err) {\n      console.log(err);\n      // setError(\n      //   err.message ||\n      //     'Adding a goal failed - the server responsed with an error.'\n      // );\n    }\n    // setIsLoading(false);\n  }\n\n  useEffect(function () {\n    async function fetchData() {\n      setIsLoading(true);\n      try {\n        const response = await fetch('http://localhost/genre');\n        const resData = await response.json();\n        if (!response.ok) {\n          throw new Error(resData.message || 'Fetching the goals failed.');\n        }\n        console.log(\"This is the response data\", resData);\n        setLoadedGoals(resData);\n      } catch (err) {\n        setError(err.message || 'Fetching goals failed - the server responsed with an error.');\n      }\n      setIsLoading(false);\n    }\n    fetchData();\n  }, []);\n  function handleModal() {\n    setActive(!active);\n  }\n  if (!isLoading && loadedGoals) {\n    console.log(loadedGoals['genres'][0].name);\n  }\n  return isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: \"Hi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      width: \"18rem\",\n      margin: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n      variant: \"top\",\n      src: \"\",\n      alt: 'ds',\n      width: 259,\n      height: 380\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(Card.Title, {\n        children: loadedGoals['genres'][0].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"lml-auto\",\n          variant: \"primary\",\n          type: \"submit\",\n          value: \"Send\",\n          onClick: () => addGoalHandler(\"title\"),\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"ml-auto\",\n          variant: \"primary\",\n          type: \"submit\",\n          value: \"Send\",\n          onClick: handleModal,\n          children: \"More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(AddGenres, \"d+J0deeARWUkyjdjZqgJJw4dpSc=\");\n_c = AddGenres;\nexport default AddGenres;\nvar _c;\n$RefreshReg$(_c, \"AddGenres\");","map":{"version":3,"names":["Button","Card","Row","useState","useEffect","Modal","Image","jsxDEV","_jsxDEV","genres","require","AddGenres","_ref","_s","movie","addGoalHandler","active","setActive","loadedGoals","setLoadedGoals","isLoading","setIsLoading","error","setError","initGenre","response","fetch","method","body","JSON","stringify","name","headers","resData","json","ok","Error","message","err","console","log","fetchData","handleModal","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","margin","Img","variant","src","alt","height","Body","Title","Footer","className","type","value","onClick","_c","$RefreshReg$"],"sources":["/home/dejvi/Documents/Docker/MovieApp/frontend/src/AddGenres.js"],"sourcesContent":["import Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport { Row } from \"react-bootstrap\";\nimport { useState,useEffect } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Image from \"react-bootstrap/Image\";\nconst genres = require('./data/genres.json')\n\n\nconst AddGenres = ({ movie, addGoalHandler }) => {\n//   const { title, year, thumbnail, cast, genres } = movie;\n  const [active, setActive] = useState(false);\n  const [loadedGoals, setLoadedGoals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  async function initGenre(genres) {\n    // setIsLoading(true);\n\n    try {\n      const response = await fetch('http://localhost/genre', {\n        method: 'POST',\n        body: JSON.stringify({\n          name: genres,\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      const resData = await response.json();\n      // console.log(resData.movies)\n      if (!response.ok) {\n        throw new Error(resData.message || 'Adding the goal failed.');\n      }\n      // console.log(resData)\n      // setLoadedGoals(resData.movies.results.map((a)=>  \n      // a.title));\n\n    } catch (err) {\n      console.log(err)\n      // setError(\n      //   err.message ||\n      //     'Adding a goal failed - the server responsed with an error.'\n      // );\n    }\n    // setIsLoading(false);\n  }\n  \n\n\n  useEffect(function () {\n    async function fetchData() {\n      setIsLoading(true);\n\n      try {\n        const response = await fetch('http://localhost/genre');\n\n        const resData = await response.json();\n\n        if (!response.ok) {\n          throw new Error(resData.message || 'Fetching the goals failed.');\n        }\n        console.log(\"This is the response data\",resData)\n        setLoadedGoals(resData);\n      } catch (err) {\n        setError(\n          err.message ||\n            'Fetching goals failed - the server responsed with an error.'\n        );\n      }\n      setIsLoading(false);\n    }\n\n    fetchData();\n  }, []);\n\n\n  function handleModal() {\n    setActive(!active);\n  }\n  if(!isLoading && loadedGoals){\n    console.log(loadedGoals['genres'][0].name)\n  }\n  \n  return isLoading ?(\n    \n    <div>\n        <ul>\n            Hi\n        </ul>\n\n    </div>\n  ): (\n    <Card style={{ width: \"18rem\", margin: \"10px\" }}>\n      <Card.Img\n        variant=\"top\"\n        src={\"\"}\n        alt={'ds'}\n        width={259}\n        height={380}\n      />\n      <Card.Body>\n      \n            <Card.Title>{loadedGoals['genres'][0].name}</Card.Title>\n       \n        \n\n      </Card.Body>\n      <Card.Footer>\n        <Row>\n          <Button\n            className=\"lml-auto\"\n            variant=\"primary\"\n            type=\"submit\"\n            value=\"Send\"\n            onClick={() => addGoalHandler(\"title\")}\n          >\n            Post\n          </Button>\n          <Button\n            className=\"ml-auto\"\n            variant=\"primary\"\n            type=\"submit\"\n            value=\"Send\"\n            onClick={handleModal}\n          >\n            More\n          </Button>\n        </Row>\n      </Card.Footer>\n    </Card>\n  );\n};\n\nexport default AddGenres;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}