{"ast":null,"code":"var _jsxFileName = \"/home/dejvi/Documents/Docker/MovieApp/frontend/src/ProtectedRoutes.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport Cookies from \"universal-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cookies = new Cookies();\n\n// receives component and any other props represented by ...rest\nexport default function ProtectedRoutes(_ref) {\n  let {\n    component: Component,\n    ...rest\n  } = _ref;\n  return (\n    /*#__PURE__*/\n    // this route takes other route assigned to it from the App.js and return the same route if condition is met\n    _jsxDEV(Route, {\n      ...rest,\n      render: props => {\n        // get cookie from browser if logged in\n        const token = cookies.get(\"TOKEN\");\n\n        // return route if there is a valid token set in the cookie\n        if (token) {\n          return /*#__PURE__*/_jsxDEV(Component, {\n            ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 18\n          }, this);\n        } else {\n          // return the user to the landing page if there is no valid token set\n          return /*#__PURE__*/_jsxDEV(Redirect, {\n            to: {\n              pathname: \"/\",\n              state: {\n                // sets the location a user was about to assess before being redirected to login\n                from: props.location\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this)\n  );\n}\n_c = ProtectedRoutes;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoutes\");","map":{"version":3,"names":["React","Route","Redirect","Cookies","jsxDEV","_jsxDEV","cookies","ProtectedRoutes","_ref","component","Component","rest","render","props","token","get","fileName","_jsxFileName","lineNumber","columnNumber","to","pathname","state","from","location","_c","$RefreshReg$"],"sources":["/home/dejvi/Documents/Docker/MovieApp/frontend/src/ProtectedRoutes.js"],"sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport Cookies from \"universal-cookie\";\nconst cookies = new Cookies();\n\n// receives component and any other props represented by ...rest\nexport default function ProtectedRoutes({ component: Component, ...rest }) {\n  return (\n\n    // this route takes other route assigned to it from the App.js and return the same route if condition is met\n    <Route\n      {...rest}\n      render={(props) => {\n        // get cookie from browser if logged in\n        const token = cookies.get(\"TOKEN\");\n\n        // return route if there is a valid token set in the cookie\n        if (token) {\n          return <Component {...props} />;\n        } else {\n          // return the user to the landing page if there is no valid token set\n          return (\n            <Redirect\n              to={{\n                pathname: \"/\",\n                state: {\n                  // sets the location a user was about to assess before being redirected to login\n                  from: props.location,\n                },\n              }}\n            />\n          );\n        }\n      }}\n    />\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAClD,OAAOC,OAAO,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACvC,MAAMC,OAAO,GAAG,IAAIH,OAAO,CAAC,CAAC;;AAE7B;AACA,eAAe,SAASI,eAAeA,CAAAC,IAAA,EAAoC;EAAA,IAAnC;IAAEC,SAAS,EAAEC,SAAS;IAAE,GAAGC;EAAK,CAAC,GAAAH,IAAA;EACvE;IAAA;IAEE;IACAH,OAAA,CAACJ,KAAK;MAAA,GACAU,IAAI;MACRC,MAAM,EAAGC,KAAK,IAAK;QACjB;QACA,MAAMC,KAAK,GAAGR,OAAO,CAACS,GAAG,CAAC,OAAO,CAAC;;QAElC;QACA,IAAID,KAAK,EAAE;UACT,oBAAOT,OAAA,CAACK,SAAS;YAAA,GAAKG;UAAK;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QACjC,CAAC,MAAM;UACL;UACA,oBACEd,OAAA,CAACH,QAAQ;YACPkB,EAAE,EAAE;cACFC,QAAQ,EAAE,GAAG;cACbC,KAAK,EAAE;gBACL;gBACAC,IAAI,EAAEV,KAAK,CAACW;cACd;YACF;UAAE;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAEN;MACF;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;AAEN;AAACM,EAAA,GA9BuBlB,eAAe;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}